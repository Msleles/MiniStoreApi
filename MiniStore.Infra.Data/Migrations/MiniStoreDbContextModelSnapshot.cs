// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniStore.Infra.Data.Context;

#nullable disable

namespace MiniStore.Infra.Data.Migrations
{
    [DbContext(typeof(MiniStoreDbContext))]
    partial class MiniStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiniStore.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a8937be-89e5-4570-be15-e2c3a78b5784"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7411), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Material Escolar",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("90cf3b67-ecdc-46fc-b928-a3c5b172517f"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7442), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Eletrônicos",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("0492a3fd-30d8-451a-909d-c22641403aea"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7444), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Acessórios",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("0ba2ff4b-6da9-464e-a7ee-d710289adeb2"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7446), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Roupas e Moda",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("fad8f66a-b503-41bc-b88d-cf1930abff50"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7448), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Casa e Decoração",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("1be3b858-5403-4152-8585-b0d885cc97b0"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7450), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Alimentos e Bebidas",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("d1d16f75-5c55-49b6-a991-31073d6e975f"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7504), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Beleza e Cuidados Pessoais",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("ab2cfa62-d057-4102-a742-85e5de808059"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7506), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Automotivo",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("aca3fe74-533d-442f-92f8-7891c1b33cf1"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7510), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Esportes e Atividades ao Ar Livre",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("1fd695c7-538b-469a-ab60-977fad4bfabd"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7513), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Brinquedos e Jogos",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("81c2cd72-e135-4c55-8bbf-6dfeb31771d8"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7515), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Livros e Mídia",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("672bf0e7-7989-4785-9525-e04db092fdbb"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7517), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Saúde e Bem-Estar",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("bae87c48-0df0-472f-bc09-f032230985c4"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7518), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Ferramentas e Equipamentos",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("5de8b1aa-f39c-4366-ad44-194a15eaa2b5"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7521), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Móveis",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("0a0cf76c-8b09-4709-9fde-d23c1ea2e36f"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7522), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Joias e Acessórios",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("8f9c3a30-f260-43f5-a593-f79b111da4cd"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7524), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Instrumentos Musicais",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("791007c1-a2ac-480c-a317-fcacd75abea5"),
                            DataCadastro = new DateTimeOffset(new DateTime(2023, 6, 8, 13, 51, 38, 493, DateTimeKind.Unspecified).AddTicks(7528), new TimeSpan(0, -3, 0, 0, 0)),
                            Nome = "Pet Shop e Animais de Estimação",
                            Status = true
                        });
                });

            modelBuilder.Entity("MiniStore.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MiniStore.Domain.Entities.Produto", b =>
                {
                    b.HasOne("MiniStore.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MiniStore.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
